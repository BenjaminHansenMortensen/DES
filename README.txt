README

To run the DES encryption or decryption you will have to run it in the terminal.
DES.py takes three arguments [mode] [input_file] [output_file]

[mode]: "encryption" or "decryption"
[input_file]: takes plaintext from file for encryption or takes ciphertext from file for decryption
[output_file]: writes ciphertext to file for encryption or writes plaintext to file for decryption


Examples:

[user@localhost DES]$ python DES.py encryption plaintext.txt ciphertext.txt

[user@localhost DES]$ python DES.py decryption ciphertext.txt plaintext.txt


NB! Implementation detailes for padding:

The padding applied in CBC mode is done by adding 0's to fill a block to achieve 64 bits.
How many 0's the last block is padded with can be described with 6 additional bits which
is added at the end of the 64 * k bit long ciphertext. Meaning the ciphertext
is  64 * k + 6 bits long. This allows for deriving the padded amount for decryption from
any encrypted plaintext by getting the last 6 bits from the ciphertext to find how much
padding needs to be removed from the last block to achieve a bijective relation
between any plaintext and ciphertext that has been generated by THIS program.

